rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ========================
    // USER PROFILE DOCUMENTS
    // ========================
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Billing events and other subcollections can be secured here
      match /billingEvents/{eventId} {
         allow read: if request.auth.uid == userId;
         allow write: if false; // Only server can write
      }
      match /plaidItems/{itemId} {
         allow read, write: if request.auth.uid == userId;
      }
       match /transactions/{txId} {
         allow read, write: if request.auth.uid == userId;
      }
       match /rules/{ruleId} {
         allow read, write: if request.auth.uid == userId;
      }
       match /allocations/{allocId} {
         allow read: if request.auth.uid == userId;
         allow write: if false; // Server only
      }
       match /accounts/{acctId} {
         allow read, write: if request.auth.uid == userId;
      }
    }

    // ========================
    // TEAM DATA
    // ========================
    match /teams/{teamId} {
      allow read: if request.auth != null && isTeamMember(teamId);
      allow write: if request.auth != null && isTeamOwner(teamId);
      
      // Members subcollection
      match /members/{memberId} {
        allow read, write: if request.auth != null && isTeamMember(teamId);
      }

      // Invites subcollection
      match /invites/{inviteId} {
        allow read, write: if request.auth != null && isTeamMember(teamId);
      }

      // Audit logs â€“ only readable by team, but not writable by client
      match /auditLogs/{logId} {
        allow read: if request.auth != null && isTeamMember(teamId);
        allow write: if false;  // Only server functions should write audit logs
      }
    }
    
    // Blog posts are public
    match /blogPosts/{postId} {
      allow read: if true;
      allow write: if false; // Should be written from an admin tool/backend
    }
  }

  // ========================
  // ðŸ”’ HELPER FUNCTIONS
  // ========================
  function isTeamMember(teamId) {
    return exists(/databases/$(database)/documents/teams/$(teamId)/members/$(request.auth.uid));
  }

  function isTeamOwner(teamId) {
    return get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
  }
}
